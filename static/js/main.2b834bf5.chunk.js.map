{"version":3,"sources":["reducers/index.js","reducers/weatherReducer.js","reducers/locationReducer.js","reducers/tempScaleReducer.js","actions/index.js","components/SearchLocation.js","components/Header.js","components/CurrentWeather.js","components/HourlyWeather.js","components/DailyWeather.js","helpers.js","components/WeatherDescriptionItem.js","components/WeatherDescription.js","components/Weather.js","components/App.js","index.js"],"names":["combineReducers","weather","prevState","action","type","payload","location","tempScale","API_KEY","fetchWeather","lat","lon","dispatch","a","axios","get","response","console","log","data","fetchLocation","city","getState","then","catch","error","fetchWeatherAndLocation","coords","coord","connect","useState","input","setInput","onSearchSubmit","e","preventDefault","err","onSubmit","className","placeholder","value","onChange","target","required","onClick","state","toggleTempScale","celsiusFontWeight","fahrenheitFontWeight","src","style","maxWidth","height","alt","fontWeight","temperature","name","current","main","temp","daily","max","min","hourly","map","hour","index","time","moment","unix","dt","format","key","pop","Math","round","icon","description","day","humidity","windDegreeToText","degree","WeatherDescriptionItem","sunrise","sunset","wind_deg","wind_speed","feels_like","rain","pressure","visibility","uvi","useEffect","kelvin","kelvinToFahrenheit","Object","keys","length","night","role","App","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","document","querySelector"],"mappings":"uNAKeA,cAAgB,CAC7BC,QCNa,WAA6B,IAA5BC,EAA2B,uDAAf,GAAIC,EAAW,uCACzC,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAOD,EAAOE,QAChB,QACE,OAAOH,IDEXI,SEPa,WAA6B,IAA5BJ,EAA2B,uDAAf,GAAIC,EAAW,uCACzC,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOD,EAAOE,QAChB,IAAK,uBAEL,QACE,OAAOH,IFCXK,UGRa,WAAoC,IAAnCL,EAAkC,uDAAtB,UAAWC,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,oBACH,MAAqB,YAAdF,EAA0B,aAAe,UAClD,QACE,OAAOA,M,gDCHPM,EAAU,mCAEHC,EAAe,SAACC,EAAKC,GAChC,8CAAO,WAAOC,GAAP,eAAAC,EAAA,sEACkBC,IAAMC,IAAN,8DACkCL,EADlC,gBAC6CC,EAD7C,kBAC0DH,IAF5E,OACCQ,EADD,OAILC,QAAQC,IAAIF,GACZJ,EAAS,CACPR,KAAM,gBACNC,QAASW,EAASG,OAPf,2CAAP,uDAYWC,EAAgB,SAACC,GAC5B,8CAAO,WAAOT,EAAUU,GAAjB,SAAAT,EAAA,sEACCC,IACHC,IADG,2DACqDM,EADrD,kBACmEb,IACtEe,MAAK,SAACP,GACLJ,EAAS,CACPR,KAAM,iBACNC,QAASW,EAASG,UAGrBK,OAAM,SAACC,GACNb,EAAS,CACPR,KAAM,4BAXP,2CAAP,yDAiBWsB,EAA0B,SAACL,GACtC,8CAAO,WAAOT,EAAUU,GAAjB,eAAAT,EAAA,sEACCD,EAASQ,EAAcC,IADxB,cAECM,EAASL,IAAWhB,SAASsB,MAF9B,SAGChB,EAASH,EAAakB,EAAOjB,IAAKiB,EAAOhB,MAH1C,2CAAP,yD,QCGakB,cAAQ,KAAM,CAAEH,2BAAhBG,EAnCQ,SAAC,GAAiC,IAA/BH,EAA8B,EAA9BA,wBAA8B,EAC5BI,mBAAS,IADmB,mBAC/CC,EAD+C,KACxCC,EADwC,KAKhDC,EAAiB,SAACC,GACtBA,EAAEC,iBACF,IACET,EAAwBK,GACxB,MAAOK,GACPnB,QAAQC,IAAI,QAGhB,OACE,0BAAMmB,SAAUJ,EAAgBK,UAAU,mBACxC,yBAAKA,UAAU,yBACb,2BACEA,UAAU,eACVlC,KAAK,SACLmC,YAAY,eACZC,MAAOT,EACPU,SAnBe,SAACP,GACtBF,EAASE,EAAEQ,OAAOF,QAmBZG,UAAQ,IAEV,yBAAKL,UAAU,mBAAf,gCACA,yBAAKA,UAAU,qBAAqBM,QAASX,GAC3C,4BAAQK,UAAU,wBAAwBlC,KAAK,UAA/C,gBCUKyB,eAJS,SAACgB,GACvB,MAAO,CAAEtC,UAAWsC,EAAMtC,aAGY,CAAEuC,gBFGX,WAC7B,MAAO,CAAE1C,KAAM,uBEJFyB,EAnCA,SAAC,GAAoC,IAAlCtB,EAAiC,EAAjCA,UAAWuC,EAAsB,EAAtBA,gBACrBC,EAAkC,YAAdxC,EAA0B,SAAW,SACzDyC,EAAqC,eAAdzC,EAA6B,SAAW,SAKrE,OACE,yBAAK+B,UAAU,6DACb,yBAAKA,UAAU,wBACb,yBACEA,UAAU,aACVW,IAAI,qFACJC,MAAO,CAAEC,SAAU,QAASC,OAAQ,QACpCC,IAAK,UAIT,yBAAKf,UAAU,YACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,YACb,4BAAQM,QAlBY,WACxBE,KAiBwC1C,KAAK,SAASkC,UAAU,uBAC1D,0BAAMY,MAAO,CAAEI,WAAYP,IAA3B,SADF,KAC8D,IAC5D,0BAAMG,MAAO,CAAEI,WAAYN,IAA3B,eCTKnB,eAJS,SAACgB,GACvB,MAAO,CAAE5C,QAAS4C,EAAM5C,QAASK,SAAUuC,EAAMvC,YAGpCuB,EAjBQ,SAAC,GAAwC,IAAtC5B,EAAqC,EAArCA,QAASK,EAA4B,EAA5BA,SAAUiD,EAAkB,EAAlBA,YAC3C,OACE,yBAAKjB,UAAU,yCACb,wBAAIA,UAAU,iBAAiBhC,EAASkD,MACxC,wBAAIlB,UAAU,6BAA6BrC,EAAQwD,QAAQxD,QAAQ,GAAGyD,MACtE,wBAAIpB,UAAU,kBAAkBiB,EAAYtD,EAAQwD,QAAQE,OAC5D,yBAAKrB,UAAU,UACb,uBAAGA,UAAU,QAAb,KAAuBiB,EAAYtD,EAAQ2D,MAAM,GAAGD,KAAKE,MACzD,uBAAGvB,UAAU,QAAb,KAAuBiB,EAAYtD,EAAQ2D,MAAM,GAAGD,KAAKG,W,gBCgClDjC,eAJS,SAACgB,GACvB,MAAO,CAAEkB,OAAQlB,EAAM5C,QAAQ8D,UAGlBlC,EAvCO,SAAC,GAA6B,IAA3BkC,EAA0B,EAA1BA,OAAQR,EAAkB,EAAlBA,YA4B/B,OACE,yBAAKjB,UAAU,oEA3BRyB,EAAOC,KAAI,SAACC,EAAMC,GACvB,GAAIA,EAAQ,GAAI,CACd,IAAMC,EAAiB,IAAVD,EAAc,MAAQE,IAAOC,KAAKJ,EAAKK,IAAIC,OAAO,MAC/D,OACE,yBAAKjC,UAAU,oDAAoDkC,IAAKP,EAAKK,IAC3E,uBAAGpB,MAAgB,QAATiB,EAAiB,CAAEb,WAAY,UAAa,CAAEA,WAAY,WACjEa,GAEH,uBAAG7B,UAAU,gBAAgB2B,EAAKQ,IAAM,EAAIC,KAAKC,MAAiB,IAAXV,EAAKQ,KAAa,IAAM,IAC/E,gCACE,yBACEnC,UAAU,wBACVW,IAAG,4CAAuCgB,EAAKhE,QAAQ,GAAG2E,KAAvD,WACHvB,IAAKY,EAAKhE,QAAQ,GAAG4E,eAIzB,uBAAGvC,UAAU,IAAIiB,EAAYU,EAAKN,QAItC,OAAO,YCsCA9B,eAJS,SAACgB,GACvB,MAAO,CAAE5C,QAAS4C,EAAM5C,QAAQ2D,SAGnB/B,EA7DM,SAAC,GAA8B,IAA5B5B,EAA2B,EAA3BA,QAASsD,EAAkB,EAAlBA,YAiC/B,OACE,yBAAKjB,UAAU,aACb,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,2HACb,yBAAKA,UAAU,oEACb,uCAEF,yBAAKA,UAAU,2DACf,yBAAKA,UAAU,0DACb,kDAEF,yBAAKA,UAAU,0DACb,4CAEF,yBAAKA,UAAU,qEACb,gDA9CDrC,EAAQ+D,KAAI,SAACc,EAAKZ,GACvB,OAAc,IAAVA,EACK,KAGP,yBACEM,IAAKM,EAAIR,GACThC,UAAU,oGAEV,yBAAKA,UAAU,OACb,uBAAGA,UAAU,QAAQ8B,IAAOC,KAAKS,EAAIR,IAAIC,OAAO,UAElD,yBAAKjC,UAAU,wBACb,yBACEA,UAAU,wBACVW,IAAG,2CAAsC6B,EAAI7E,QAAQ,GAAG2E,KAArD,WACHvB,IAAKyB,EAAI7E,QAAQ,GAAG4E,eAGxB,yBAAKvC,UAAU,2DACZoC,KAAKC,MAAgB,IAAVG,EAAIL,KADlB,KAGA,yBAAKnC,UAAU,qCAAqCwC,EAAIC,SAAxD,KACA,yBAAKzC,UAAU,2CACb,uBAAGA,UAAU,SAASiB,EAAYuB,EAAInB,KAAKE,MAC3C,uBAAGvB,UAAU,cAAciB,EAAYuB,EAAInB,KAAKG,gBCf/CkB,EAAmB,SAACC,GAC/B,QAAQ,GACN,KAAKA,EAAS,KACZ,MAAO,IACT,KAAKA,EAAS,GACZ,MAAO,MACT,KAAKA,EAAS,KACZ,MAAO,KACT,KAAKA,EAAS,GACZ,MAAO,MACT,KAAKA,EAAS,MACZ,MAAO,IACT,KAAKA,EAAS,IACZ,MAAO,MACT,KAAKA,EAAS,MACZ,MAAO,KACT,KAAKA,EAAS,IACZ,MAAO,MACT,KAAKA,EAAS,MACZ,MAAO,IACT,KAAKA,EAAS,IACZ,MAAO,MACT,KAAKA,EAAS,MACZ,MAAO,KACT,KAAKA,EAAS,IACZ,MAAO,MACT,KAAKA,EAAS,MACZ,MAAO,IACT,KAAKA,EAAS,IACZ,MAAO,MACT,KAAKA,EAAS,MACZ,MAAO,MACT,QACE,MAAO,OCtCEC,EATgB,SAAC,GAA4B,IAA1BL,EAAyB,EAAzBA,YAAarC,EAAY,EAAZA,MAC7C,OACE,wBAAIF,UAAU,sFACZ,2BAAOA,UAAU,cAAcuC,GAC/B,wBAAIvC,UAAU,2BAA2BE,KCoDhCX,eAJS,SAACgB,GACvB,MAAO,CAAE5C,QAAS4C,EAAM5C,WAGX4B,EAnDY,SAAC,GAA8B,IAA5B5B,EAA2B,EAA3BA,QAASsD,EAAkB,EAAlBA,YACrC,OACE,yBAAKjB,UAAU,aACb,yBAAKA,UAAU,kGACb,kBAAC,EAAD,CACEuC,YAAa,UACbrC,MAAO4B,IAAOC,KAAKpE,EAAQwD,QAAQ0B,SAASZ,OAAO,WAErD,kBAAC,EAAD,CACEM,YAAa,SACbrC,MAAO4B,IAAOC,KAAKpE,EAAQwD,QAAQ2B,QAAQb,OAAO,WAEpD,kBAAC,EAAD,CACEM,YAAa,iBACbrC,MAAK,UAAKkC,KAAKC,MAA8B,IAAxB1E,EAAQ8D,OAAO,GAAGU,KAAlC,OAEP,kBAAC,EAAD,CAAwBI,YAAa,WAAYrC,MAAK,UAAKvC,EAAQwD,QAAQsB,SAArB,OACtD,kBAAC,EAAD,CACEF,YAAa,OACbrC,MAAK,UAAKwC,EAAiB/E,EAAQwD,QAAQ4B,UAAtC,YAAmDX,KAAKC,MAC3D1E,EAAQwD,QAAQ6B,YADb,aAKT,yBAAKhD,UAAU,mGACb,kBAAC,EAAD,CACEuC,YAAa,aACbrC,MAAOe,EAAYtD,EAAQwD,QAAQ8B,cAErC,kBAAC,EAAD,CACEV,YAAa,gBACbrC,MAAOvC,EAAQ2D,MAAM,GAAG4B,KAAjB,UAA2BvF,EAAQ2D,MAAM,GAAG4B,KAA5C,OAAwD,OAEjE,kBAAC,EAAD,CACEX,YAAa,WACbrC,MAAK,UAAKvC,EAAQwD,QAAQgC,SAArB,UAEP,kBAAC,EAAD,CACEZ,YAAa,aACbrC,MAAK,UAAKvC,EAAQwD,QAAQiC,WAAa,IAAlC,SAEP,kBAAC,EAAD,CAAwBb,YAAa,WAAYrC,MAAOvC,EAAQwD,QAAQkC,WCwBjE9D,eAJS,SAACgB,GACvB,MAAO,CAAE5C,QAAS4C,EAAM5C,QAASK,SAAUuC,EAAMvC,SAAUC,UAAWsC,EAAMtC,aAGtC,CAAEmB,2BAA3BG,EAzDC,SAAC,GAA+D,IAA7D5B,EAA4D,EAA5DA,QAASK,EAAmD,EAAnDA,SAAUoB,EAAyC,EAAzCA,wBAAyBnB,EAAgB,EAAhBA,UAC7DqF,qBAAU,WACRlE,EAAwB,YACvB,CAACA,IAEJ,IAAM6B,EAAc,SAACI,GACnB,MAAqB,YAAdpD,GHrBqBsF,EGqBqBlC,EHpB7C,GAAN,OAAUe,KAAKC,MAAMkB,EAAS,QAA9B,SAEgC,SAACA,GACjC,MAAM,GAAN,OAAUnB,KAAKC,MAAM,KAACkB,EAAS,QAAoB,IAAnD,QGiB2DC,CAAmBnC,GHrBjD,IAACkC,GG4D9B,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKvD,UAAU,IAtCmB,IAAhCyD,OAAOC,KAAK/F,GAASgG,QAAiD,IAAjCF,OAAOC,KAAK1F,GAAU2F,OAE3D,yBAAK3D,UAAU,QACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CAAgBiB,YAAaA,KAE/B,yBAAKjB,UAAU,uBACb,kBAAC,EAAD,CAAeiB,YAAaA,KAG9B,yBAAKjB,UAAU,6BACb,kBAAC,EAAD,CAAciB,YAAaA,KAE7B,yBAAKjB,UAAU,0CACb,kBAAC,EAAD,CAAoBiB,YAAaA,KAEnC,yBAAKjB,UAAU,sCAAf,UACUrC,EAAQwD,QAAQxD,QAAQ,GAAG4E,YADrC,qBACoE,IACjEtB,EAAYtD,EAAQ2D,MAAM,GAAGD,KAAKE,KAFrC,4BAEoE,IACjEN,EAAYtD,EAAQ2D,MAAM,GAAGD,KAAKuC,OAHrC,OAUJ,yBAAK5D,UAAU,iCACb,yBAAKA,UAAU,iBAAiB6D,KAAK,UACnC,0BAAM7D,UAAU,WAAhB,qBCxCG8D,EARH,WACV,OACE,yBAAK9D,UAAU,mBACb,kBAAC,EAAD,QCAN+D,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,EAAUC,YAAgBC,OACrD,kBAAC,EAAD,OAEFC,SAASC,cAAc,Y","file":"static/js/main.2b834bf5.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport weatherReducer from './weatherReducer';\nimport locationReducer from './locationReducer';\nimport tempScaleReducer from './tempScaleReducer';\n\nexport default combineReducers({\n  weather: weatherReducer,\n  location: locationReducer,\n  tempScale: tempScaleReducer,\n});\n","export default (prevState = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_WEATHER':\n      return action.payload;\n    default:\n      return prevState;\n  }\n};\n","export default (prevState = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_LOCATION':\n      return action.payload;\n    case 'FETCH_LOCATION_ERROR':\n      return prevState;\n    default:\n      return prevState;\n  }\n};\n","export default (prevState = 'celsius', action) => {\n  switch (action.type) {\n    case 'TOGGLE_TEMP_SCALE':\n      return prevState === 'celsius' ? 'fahrenheit' : 'celsius';\n    default:\n      return prevState;\n  }\n};\n","import axios from 'axios';\n\nconst API_KEY = '1271256593c8dcf1f9d4048d228181a2';\n\nexport const fetchWeather = (lat, lon) => {\n  return async (dispatch) => {\n    const response = await axios.get(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${API_KEY}`\n    );\n    console.log(response);\n    dispatch({\n      type: 'FETCH_WEATHER',\n      payload: response.data,\n    });\n  };\n};\n\nexport const fetchLocation = (city) => {\n  return async (dispatch, getState) => {\n    await axios\n      .get(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`)\n      .then((response) => {\n        dispatch({\n          type: 'FETCH_LOCATION',\n          payload: response.data,\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: 'FETCH_LOCATION_ERROR',\n        });\n      });\n  };\n};\n\nexport const fetchWeatherAndLocation = (city) => {\n  return async (dispatch, getState) => {\n    await dispatch(fetchLocation(city));\n    const coords = getState().location.coord;\n    await dispatch(fetchWeather(coords.lat, coords.lon));\n  };\n};\n\nexport const toggleTempScale = () => {\n  return { type: 'TOGGLE_TEMP_SCALE' };\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchWeatherAndLocation } from '../actions';\n\nconst SearchLocation = ({ fetchWeatherAndLocation }) => {\n  const [input, setInput] = useState('');\n  const onSearchChange = (e) => {\n    setInput(e.target.value);\n  };\n  const onSearchSubmit = (e) => {\n    e.preventDefault();\n    try {\n      fetchWeatherAndLocation(input);\n    } catch (err) {\n      console.log('gg');\n    }\n  };\n  return (\n    <form onSubmit={onSearchSubmit} className=\"w-100 searchbar\">\n      <div className=\"input-group mb-2 mt-2\">\n        <input\n          className=\"form-control\"\n          type=\"search\"\n          placeholder=\"Enter a city\"\n          value={input}\n          onChange={onSearchChange}\n          required\n        />\n        <div className=\"invalid-tooltip\">Please provide a valid city.</div>\n        <div className=\"input-group-append\" onClick={onSearchSubmit}>\n          <button className=\"btn orange text-white\" type=\"button\">\n            Search\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default connect(null, { fetchWeatherAndLocation })(SearchLocation);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SearchLocation from './SearchLocation';\nimport { toggleTempScale } from '../actions';\n\nconst Header = ({ tempScale, toggleTempScale }) => {\n  const celsiusFontWeight = tempScale === 'celsius' ? 'bolder' : 'normal';\n  const fahrenheitFontWeight = tempScale === 'fahrenheit' ? 'bolder' : 'normal';\n\n  const onToggleTempScale = () => {\n    toggleTempScale();\n  };\n  return (\n    <nav className=\"navbar navbar-dark bg-dark row mb-4 pt-4 pb-4 text-center\">\n      <div className=\"col-sm-2 text-center\">\n        <img\n          className=\"img-fluid \"\n          src=\"https://openweathermap.org/themes/openweathermap/assets/img/logo_white_cropped.png\"\n          style={{ maxWidth: '100px', height: 'auto' }}\n          alt={'logo'}\n        />\n      </div>\n\n      <div className=\"col-sm-8\">\n        <SearchLocation />\n      </div>\n      <div className=\"col-sm-2\">\n        <button onClick={onToggleTempScale} type=\"button\" className=\"btn btn-light w-100\">\n          <span style={{ fontWeight: celsiusFontWeight }}>°C</span> /{' '}\n          <span style={{ fontWeight: fahrenheitFontWeight }}>°F</span>\n        </button>\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { tempScale: state.tempScale };\n};\n\nexport default connect(mapStateToProps, { toggleTempScale })(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst CurrentWeather = ({ weather, location, temperature }) => {\n  return (\n    <div className=\"d-flex flex-column align-items-center\">\n      <h2 className=\"location-name\">{location.name}</h2>\n      <h4 className=\"weather-short-description\">{weather.current.weather[0].main}</h4>\n      <h1 className=\"display-1 ml-3\">{temperature(weather.current.temp)}</h1>\n      <div className=\"d-flex\">\n        <p className=\"mx-1\">H:{temperature(weather.daily[0].temp.max)}</p>\n        <p className=\"mx-1\">L:{temperature(weather.daily[0].temp.min)}</p>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return { weather: state.weather, location: state.location };\n};\n\nexport default connect(mapStateToProps)(CurrentWeather);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nconst HourlyWeather = ({ hourly, temperature }) => {\n  const renderHourly = () => {\n    return hourly.map((hour, index) => {\n      if (index < 27) {\n        const time = index === 0 ? 'Now' : moment.unix(hour.dt).format('HH');\n        return (\n          <div className=\"d-flex flex-column col-2 align-items-center px-4 \" key={hour.dt}>\n            <p style={time === 'Now' ? { fontWeight: 'bolder' } : { fontWeight: 'normal' }}>\n              {time}\n            </p>\n            <p className=\"text-primary\">{hour.pop > 0 ? Math.round(hour.pop * 100) + '%' : ''}</p>\n            <figure>\n              <img\n                className=\"img-fluid weather-img\"\n                src={` http://openweathermap.org/img/wn/${hour.weather[0].icon}@4x.png`}\n                alt={hour.weather[0].description}\n              />\n            </figure>\n\n            <p className=\"\">{temperature(hour.temp)}</p>\n          </div>\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  return (\n    <div className=\"d-flex flex-row overflow-auto border-top border-bottom pb-2 pt-2\">\n      {renderHourly()}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { hourly: state.weather.hourly };\n};\n\nexport default connect(mapStateToProps)(HourlyWeather);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nconst DailyWeather = ({ weather, temperature }) => {\n  const renderDaily = () => {\n    return weather.map((day, index) => {\n      if (index === 0) {\n        return null;\n      }\n      return (\n        <div\n          key={day.dt}\n          className=\"list-group-item d-flex justify-content-between align-items-center row px-0 py-md-0 border-bottom\"\n        >\n          <div className=\"col\">\n            <p className=\"mb-0\">{moment.unix(day.dt).format('dddd')}</p>\n          </div>\n          <div className=\"col px-2 text-center\">\n            <img\n              className=\"img-fluid weather-img\"\n              src={`http://openweathermap.org/img/wn/${day.weather[0].icon}@4x.png`}\n              alt={day.weather[0].description}\n            />\n          </div>\n          <div className=\"col d-none d-md-block d-lg-block d-xl-block text-center\">\n            {Math.round(day.pop * 100)}%\n          </div>\n          <div className=\"col d-none d-md-block text-center\">{day.humidity}%</div>\n          <div className=\"col d-flex flex-row justify-content-end\">\n            <p className=\" mb-0\">{temperature(day.temp.max)}</p>\n            <p className=\" ml-2 mb-0\">{temperature(day.temp.min)}</p>\n          </div>\n        </div>\n      );\n    });\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"mb-4 list-group list-group-flush\">\n        <div className=\"list-group-item d-flex justify-content-between align-items-center row px-0 py-md-0 border-bottom text-center day-header\">\n          <div className=\"col text-left d-none d-md-block d-lg-block d-xl-block text-muted\">\n            <small>DAY</small>\n          </div>\n          <div className=\"col d-none d-md-block d-lg-block d-xl-bloc text-mutedk\"></div>\n          <div className=\"col d-none d-md-block d-lg-block d-xl-block text-muted\">\n            <small>CHANCE OF RAIN</small>\n          </div>\n          <div className=\"col d-none d-md-block d-lg-block d-xl-block text-muted\">\n            <small>HUMIDITY</small>\n          </div>\n          <div className=\"col text-right d-none d-md-block d-lg-block d-xl-block text-muted\">\n            <small>TEMPERATURE</small>\n          </div>\n        </div>\n        {renderDaily()}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { weather: state.weather.daily };\n};\n\nexport default connect(mapStateToProps)(DailyWeather);\n","export const kelvinToCelsius = (kelvin) => {\n  return `${Math.round(kelvin - 273.15)}°`;\n};\nexport const kelvinToFahrenheit = (kelvin) => {\n  return `${Math.round((kelvin - 273.15) * (9 / 5) + 32)}°`;\n};\n\nexport const rainPercentage = (day) => {\n  return day;\n  // let sum = 0\n  // return day.map((hour, index) => {\n  //   if (index < 24) {\n\n  //   }\n  // })\n};\nexport const windDegreeToText = (degree) => {\n  switch (true) {\n    case degree < 22.5:\n      return 'n';\n    case degree < 45:\n      return 'nne';\n    case degree < 67.5:\n      return 'ne';\n    case degree < 90:\n      return 'ene';\n    case degree < 112.5:\n      return 'e';\n    case degree < 135:\n      return 'ese';\n    case degree < 157.5:\n      return 'se';\n    case degree < 180:\n      return 'sse';\n    case degree < 202.5:\n      return 's';\n    case degree < 225:\n      return 'ssw';\n    case degree < 247.5:\n      return 'sw';\n    case degree < 270:\n      return 'wsw';\n    case degree < 292.5:\n      return 'w';\n    case degree < 315:\n      return 'wnw';\n    case degree < 337.5:\n      return 'nnw';\n    default:\n      return 'nw';\n  }\n};\n","import React from 'react';\n\nconst WeatherDescriptionItem = ({ description, value }) => {\n  return (\n    <li className=\"list-group-item  pl-md-2 col text-md-center weather-description bg-dark text-white\">\n      <small className=\"text-muted\">{description}</small>\n      <h5 className=\"mb-0 font-weight-normal\">{value}</h5>\n    </li>\n  );\n};\n\nexport default WeatherDescriptionItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { windDegreeToText } from '../helpers';\n\nimport WeatherDescriptionItem from './WeatherDescriptionItem';\n\nconst WeatherDescription = ({ weather, temperature }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row list-group-flush flex-column flex-md-row justify-content-center border-bottom  border-dark\">\n        <WeatherDescriptionItem\n          description={'SUNRISE'}\n          value={moment.unix(weather.current.sunrise).format('HH:MM')}\n        />\n        <WeatherDescriptionItem\n          description={'SUNSET'}\n          value={moment.unix(weather.current.sunset).format('HH:MM')}\n        />\n        <WeatherDescriptionItem\n          description={'CHANCE OF RAIN'}\n          value={`${Math.round(weather.hourly[0].pop * 100)}%`}\n        />\n        <WeatherDescriptionItem description={'HUMIDITY'} value={`${weather.current.humidity}%`} />\n        <WeatherDescriptionItem\n          description={'WIND'}\n          value={`${windDegreeToText(weather.current.wind_deg)} ${Math.round(\n            weather.current.wind_speed\n          )} km/hr`}\n        />\n      </div>\n      <div className=\"row list-group-flush flex-column flex-md-row justify-content-center  border-bottom border-dark \">\n        <WeatherDescriptionItem\n          description={'FEELS LIKE'}\n          value={temperature(weather.current.feels_like)}\n        />\n        <WeatherDescriptionItem\n          description={'PRECIPITATION'}\n          value={weather.daily[0].rain ? `${weather.daily[0].rain} cm` : '0%'}\n        />\n        <WeatherDescriptionItem\n          description={'PRESSURE'}\n          value={`${weather.current.pressure} hPa`}\n        />\n        <WeatherDescriptionItem\n          description={'VISIBILITY'}\n          value={`${weather.current.visibility / 100} km`}\n        />\n        <WeatherDescriptionItem description={'UV INDEX'} value={weather.current.uvi} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { weather: state.weather };\n};\n\nexport default connect(mapStateToProps)(WeatherDescription);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchWeatherAndLocation } from '../actions';\n\nimport Header from './Header';\nimport CurrentWeather from './CurrentWeather';\nimport HourlyWeather from './HourlyWeather';\nimport DailyWeather from './DailyWeather';\nimport WeatherDescription from './WeatherDescription';\n\nimport { kelvinToCelsius, kelvinToFahrenheit } from '../helpers';\n\n// TODO:\n// 1. handle fetch location error UI response\n\nconst Weather = ({ weather, location, fetchWeatherAndLocation, tempScale }) => {\n  useEffect(() => {\n    fetchWeatherAndLocation('London');\n  }, [fetchWeatherAndLocation]);\n\n  const temperature = (temp) => {\n    return tempScale === 'celsius' ? kelvinToCelsius(temp) : kelvinToFahrenheit(temp);\n  };\n\n  const renderWeather = () => {\n    if (Object.keys(weather).length !== 0 && Object.keys(location).length !== 0) {\n      return (\n        <div className=\"mb-5\">\n          <div className=\"row justify-content-center align-items-center\">\n            <div className=\"col-md-4 order-md-1\">\n              <CurrentWeather temperature={temperature} />\n            </div>\n            <div className=\"col-md-8 order-md-2\">\n              <HourlyWeather temperature={temperature} />\n            </div>\n\n            <div className=\"col-md-12 order-md-5 mt-5\">\n              <DailyWeather temperature={temperature} />\n            </div>\n            <div className=\"col-md-12 order-md-4 bg-dark pt-5 pb-5\">\n              <WeatherDescription temperature={temperature} />\n            </div>\n            <div className=\"col-12 my-5 text-center order-md-2\">\n              Today: {weather.current.weather[0].description}. The high will be{' '}\n              {temperature(weather.daily[0].temp.max)}. The low tonight will be{' '}\n              {temperature(weather.daily[0].temp.night)}.\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n        </div>\n      );\n    }\n  };\n  return (\n    <div>\n      <Header />\n      <div className=\"\">{renderWeather()}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { weather: state.weather, location: state.location, tempScale: state.tempScale };\n};\n\nexport default connect(mapStateToProps, { fetchWeatherAndLocation })(Weather);\n","import React from 'react';\n\nimport '../style.css';\n\nimport Weather from './Weather';\n\nconst App = () => {\n  return (\n    <div className=\"container-fluid\">\n      <Weather />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={createStore(reducers, applyMiddleware(thunk))}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}